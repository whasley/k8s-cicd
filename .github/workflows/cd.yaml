name: Deploy
on:
    push:
        branches: [main]

jobs:
    build:
        runs-on: ubuntu-latest
        
        steps:

        - uses: actions/checkout@v2

        - name: Docker meta
          id: docker_meta
          uses: crazy-max/ghaction-docker-meta@v1
          with:
            images: whasleycardoso/teste-app
            tag-sha: true


        - name: QEMU
          uses: docker/setup-qemu-action@v1

        - name: Docker Buildx
          uses: docker/setup-buildx-action@v1

        - name: Login to Dockerhub
          uses: docker/login-action@v1
          with:
            username: whasleycardoso
            password: ${{ secrets.DOCKERHUB_TOKEN}}

        - name: Bump version and push tag
          id: tagging
          uses: mathieudutour/github-tag-action@v4.5
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}

        - name: Build and push
          id: docker_build
          uses: docker/build-push-action@v3
          with:
            push: true
            context: .
            file: ./Dockerfile
            platforms: linux/amd64,linux/arm64
            tags: whasleycardoso/teste-app:${{ steps.tagging.outputs.new_version }}

    deploy:
    needs: [build]
        runs-on: ubuntu-latest        
        steps:

        - uses: actions/checkout@v2

        - name: 'Install OCI CLI'
          run: |
            mkdir ~/.oci
            echo "${{ secrets.OCI_CONFIG }}" > ~/.oci/config
            echo "${{ secrets.OCI_KEY_FILE }}" > ~/.oci/key.pem
            echo "${{ secrets.OCI_TOKEN_FILE }}" > ~/.oci/token
            curl -L -O https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh
            chmod +x install.sh
            ./install.sh --accept-all-defaults
            echo "/home/runner/bin" >> $GITHUB_PATH
            exec -l $SHELL
            oci setup repair-file-permissions --file /home/runner/.oci/config
            oci setup repair-file-permissions --file /home/runner/.oci/key.pem
            oci setup repair-file-permissions --file /home/runner/.oci/token

        - name: 'Install kubectl'
          run: |
            mkdir /tmp/.kube
            curl -L -O "https://dl.k8s.io/release/v1.22.4/bin/linux/amd64/kubectl" -o kubectl
            chmod +x kubectl
            mv kubectl /usr/local/bin
            echo "${{ secrets.KUBECONFIG }}" > /tmp/.kube/config
            echo "KUBECONFIG=/tmp/.kube/config" >> $GITHUB_ENV        

        - name: set deployment image
          uses: jtalk/k8s-deploy@v2
          with:            
            images: 'whasleycardoso/teste-app:${{ steps.tagging.outputs.new_version }}'
            manifests: |
              ./k8s/deployment.yaml
              ./k8s/service.yaml
              ./k8s/nodeport.yaml
            #strategy: canary
            #percentage: 20



#        - name: set deployment image
 #         run: kubectl apply -f ./k8s/deployment.yaml goserver=whasleycardoso/teste-app:${{ steps.tagging.outputs.new_version }}
#          run: kubectl set image deployment deployment.yaml goserver=whasleycardoso/teste-app:${{ steps.tagging.outputs.new_version }}
